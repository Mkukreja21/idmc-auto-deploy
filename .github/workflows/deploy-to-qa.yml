name: Deploy DEV to QA in IDMC

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Export from DEV and Import to QA
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install jq (required for JSON parsing)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get DEV Access Token
        id: get_dev_token
        run: |
          DEV_RESPONSE=$(curl -s --request POST \
            --url "${{ secrets.IDMC_BASE_URL }}/oauth2/v3/token" \
            --header 'Content-Type: application/x-www-form-urlencoded' \
            --data-urlencode "client_id=${{ secrets.IDMC_DEV_CLIENT_ID }}" \
            --data-urlencode "client_secret=${{ secrets.IDMC_DEV_CLIENT_SECRET }}" \
            --data-urlencode 'grant_type=client_credentials')

          echo "DEV_TOKEN=$(echo $DEV_RESPONSE | jq -r .access_token)" >> $GITHUB_ENV

      - name: Export Mapping from DEV
        id: export
        run: |
          EXPORT_RESPONSE=$(curl -s --request POST \
            --url "${{ secrets.IDMC_BASE_URL }}/public/core/v3/export" \
            --header "Authorization: Bearer $DEV_TOKEN" \
            --header "Content-Type: application/json" \
            --data '{
              "objects": [
                { "type": "Mapping", "name": "'"${{ secrets.MAPPING_NAME }}"'" }
              ],
              "includeDependencies": true
            }')

          echo "FILE_CONTENT=$(echo $EXPORT_RESPONSE | jq -r '.fileContent')" >> $GITHUB_ENV

      - name: Get QA Access Token
        id: get_qa_token
        run: |
          QA_RESPONSE=$(curl -s --request POST \
            --url "${{ secrets.IDMC_BASE_URL }}/oauth2/v3/token" \
            --header 'Content-Type: application/x-www-form-urlencoded' \
            --data-urlencode "client_id=${{ secrets.IDMC_QA_CLIENT_ID }}" \
            --data-urlencode "client_secret=${{ secrets.IDMC_QA_CLIENT_SECRET }}" \
            --data-urlencode 'grant_type=client_credentials')

          echo "QA_TOKEN=$(echo $QA_RESPONSE | jq -r .access_token)" >> $GITHUB_ENV

      - name: Import to QA
        run: |
          curl -s --request POST \
            --url "${{ secrets.IDMC_BASE_URL }}/public/core/v3/import" \
            --header "Authorization: Bearer $QA_TOKEN" \
            --header "Content-Type: application/json" \
            --data '{
              "fileContent": "'"$FILE_CONTENT"'",
              "importOptions": { "updateMode": "overwrite" }
            }'
